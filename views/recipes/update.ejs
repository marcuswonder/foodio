<%- include('../partials/header') %>

<div id="recipe-edit">
  <div id="recipe-edit-container">
    <form action="/recipes/<%= recipe._id %>/update/?_method=PUT" method="POST" id="recipe-top-info" >
    
      <div id="recipe-edit-header-container">
        
        <div id="recipe-edit-name-container" class="recipe-edit-header-input-container">
          <div class="recipe-edit-title">
            <h3>Title</h3>
          </div>
          <div class="recipe-edit-content">
            <textarea name="name" type="text" class="expanding-text-input" rows="1" autocomplete="off"><%= recipe.name %></textarea>
          </div>
        </div>

        <div id="recipe-edit-description-container" class="recipe-edit-header-input-container">
          <div class="recipe-edit-title">
            <h3>Description</h3>
          </div>
          <div class="recipe-edit-content">
            <textarea name="description" type="text" class="expanding-text-input" rows="1" autocomplete="off"><%= recipe.description %></textarea>
          </div>
        </div>
      </div>

      <div id="recipe-edit-info-container">
        <div id="recipe-edit-category-servings-container" class="recipe-edit-info-container">
          <div id="recipe-edit-category-container" class="recipe-edit-input-container">
            <div class="recipe-edit-title">
              <h3>Category</h3>
            </div>
              <div class="recipe-edit-content">
                <select name="category" class="input">
                  <option value="<%= recipe.category %>"><%= recipe.category %></option>
                  <option value="Snack">Snack</option>
                  <option value="Starter">Starter</option>
                  <option value="Main Course">Main Course</option>
                  <option value="Desert">Desert</option>
                  <option value="Cocktail">Cocktail</option>
                </select>
              </div>
          </div>
        
          <div id="recipe-edit-cookTime-container" class="recipe-edit-input-container">
            <div class="recipe-edit-title">
              <h3>Adult Servings</h3>
            </div>
            <div class="recipe-edit-content">
              <input name="servings" type="number"  class="short-input" autocomplete="off" value="<%= recipe.servings %>"></input>
            </div>
          </div>
        </div>

        <div id="recipe-edit-timings-container" class="recipe-edit-info-container">
          <div id="recipe-edit-prepTime-container" class="recipe-edit-input-container">
            <div class="recipe-edit-title">
              <h3>Prep Time</h3>
            </div>
            <div class="recipe-edit-content">
              <input name="prepTime" type="number"  class="short-input" autocomplete="off" value="<%= recipe.prepTime %>"></input>
            </div>
            <p>(mins)</p>
          </div>

          <div id="recipe-edit-cookTime-container" class="recipe-edit-input-container">
            <div class="recipe-edit-title">
              <h3>Cook Time</h3>
            </div>
            <div class="recipe-edit-content">
              <input name="cookTime" type="number"  class="short-input" autocomplete="off" value="<%= recipe.cookTime %>"></input>
            </div>
            <p>(mins)</p>
          </div>
        </div>
      </div>

      <!-- <div id="recipe-edit-ingredients-container">
        <h3>Ingredients</h3>
        <ul>
          <% if(recipe.ingredients.length > 0) { %>
            <% recipe.ingredients.forEach(function(ingredient) { %>
                <li><input name="ingredients" type="text" class="med-input" value="<%= ingredient %>"></input></li>
            <% }) %> 
          <% } %> 
        </ul>
          
        <button type="button" class="reg-button" onclick="addIngredientField()">Add Ingredient</button>
      </div> -->


      <h3>Ingredients</h3>
      <div id="recipe-edit-ingredients-container">
          <% if(recipe.ingredients.length > 0) { %>
            <% recipe.ingredients.forEach(function(ingredient) { %>
              <div class="recipe-edit-ingredient-container">
                <ul>
                  <li>
                    <input name="ingredient" type="text" class="ingredient" value="<%= ingredient %>"></input>
                  </li>
              </ul>
                <div class="ingredient-up">
                  <a type="button" class="ingredient-up" onclick="moveIngredientUp('<%= ingredient %>')"><img src="/public/icons/arrow_upward.png"></a>
                </div>
                <div class="ingredient-down">
                  <a type="button" class="ingredient-down" onclick="moveIngredientDown('<%= ingredient %>')"><img src="/public/icons/arrow_downward.png"></a>
                </div>
                <div class="ingredient-delete">
                  <a type="button" class="ingredient-delete" onclick="deleteIngredient('<%= ingredient %>')"><img src="/public/icons/delete.png"></a>
                </div>
              </div>
            <% }) %> 
          <% } %> 
          
        </div>
        <button type="button" class="reg-button" onclick="addIngredientField()">Add Ingredient</button>

      
      

      <h3>Instructions</h3>
      <div id="recipe-edit-instructions-container">
          <% if(recipe.instructions.length > 0) { %>
            <% recipe.instructions.forEach(function(instruction) { %>
              <div class="recipe-edit-instruction-container">
                <ul>
                  <li>
                    <input name="instruction" type="text" class="instruction" value="<%= instruction %>"></input>
                  </li>
              </ul>
                <div class="instruction-up">
                  <a type="button" class="instruction-up" onclick="moveInstructionUp('<%= instruction %>')"><img src="/public/icons/arrow_upward.png"></a>
                </div>
                <div class="instruction-down">
                  <a type="button" class="instruction-down" onclick="moveInstructionDown('<%= instruction %>')"><img src="/public/icons/arrow_downward.png"></a>
                </div>
                <div class="instruction-delete">
                  <a type="button" class="instruction-delete" onclick="deleteInstruction('<%= instruction %>')"><img src="/public/icons/delete.png"></a>
                </div>
              </div>
            <% }) %> 
          <% } %> 
          
        </div>
        <button type="button" class="reg-button" onclick="addInstructionField()">Add Instruction</button>

      
      
      
      
      
      
      
    
      <button type="submit" class="reg-button">Save Edits to Recipe Info</button>
    </form>
    
    <br>
  </div>
</div>


<script>
  function addIngredientField() {
    let container = document.getElementById('recipe-edit-ingredients-container')
    
    let ul = container.querySelector('ul')
    if (!ul) {
        ul = document.createElement('ul')
        container.appendChild(ul)
    }

    let li = document.createElement('li')

    let newIngredientInput = document.createElement('input')
    newIngredientInput.setAttribute('type', 'text')
    newIngredientInput.setAttribute('name', 'ingredients')
    newIngredientInput.setAttribute('class', 'med-input')

    li.appendChild(newIngredientInput)

    ul.appendChild(li)
  }


  function addInstructionField() {
    const instructionContainer = document.getElementById('recipe-edit-instructions-container')

    instruction = document.createElement('div');
    instruction.className = 'recipe-edit-instruction-container';

    // Create ul and append to main container
    let ul = document.createElement('ul');
    instruction.appendChild(ul);

    // Create li, input and append to ul
    let li = document.createElement('li')
    let input = document.createElement('input')
    input.setAttribute('name', 'instruction')
    input.setAttribute('type', 'text')
    input.className = 'instruction'
    li.appendChild(input)
    ul.appendChild(li)

    // Create instruction-up div and append to main container
    let instructionUp = document.createElement('div')
    instructionUp.className = 'instruction-up'
    let aUp = document.createElement('a')
    aUp.setAttribute('type', 'button')
    aUp.className = 'instruction-up'
    aUp.onclick = function() {
      moveInstructionUp(input.value);
    }
    let imgUp = document.createElement('img')
    imgUp.setAttribute('src', '/public/icons/arrow_upward.png')
    aUp.appendChild(imgUp)
    instructionUp.appendChild(aUp)
    instruction.appendChild(instructionUp)

    // Create instruction-down div and append to main container
    let instructionDown = document.createElement('div')
    instructionDown.className = 'instruction-down'
    let aDown = document.createElement('a')
    aDown.setAttribute('type', 'button')
    aDown.className = 'instruction-down'
    aDown.onclick = function() {
      moveInstructionDown(input.value);
    }
    let imgDown = document.createElement('img')
    imgDown.setAttribute('src', '/public/icons/arrow_downward.png')
    aDown.appendChild(imgDown)
    instructionDown.appendChild(aDown)
    instruction.appendChild(instructionDown)

    // Create instruction-delete div and append to main container
    let instructionDelete = document.createElement('div')
    instructionDelete.className = 'instruction-delete'
    let aDelete = document.createElement('a')
    aDelete.setAttribute('type', 'button')
    aDelete.className = 'instruction-delete'
    aDelete.onclick = function() {
      deleteInstruction(input.value)
    }
    let imgDelete = document.createElement('img')
    imgDelete.setAttribute('src', '/public/icons/delete.png')
    aDelete.appendChild(imgDelete)
    instructionDown.appendChild(aDelete)
    instruction.appendChild(instructionDown)

    // Finally append the main container to the instructionContainer
    instructionContainer.appendChild(instruction)

  }

  function moveIngredientUp(ingredientValue) {
    const ingredientsHTML = document.getElementsByClassName('ingredient')

    let ingredients = []

    for (let i = 0; i < ingredientsHTML.length; i++) {
      const ingredient = ingredientsHTML[i];
      ingredients.push(ingredient.value)
    }
    
    const arrayIndexToMoveUp = ingredients.indexOf(ingredientValue)
    if(arrayIndexToMoveUp === 0) return
    
    const CSSindexToMoveUp = (arrayIndexToMoveUp + 1)
    const CSSindexToMoveBelow = (CSSindexToMoveUp - 1)

    const elementToMoveUp = document.querySelector(`#recipe-edit-ingredients-container .recipe-edit-ingredient-container:nth-child(${CSSindexToMoveUp})`)
    const elementToMoveBelow = document.querySelector(`#recipe-edit-ingredients-container .recipe-edit-ingredient-container:nth-child(${CSSindexToMoveBelow})`)
    
    const recipeIngredientsContainer = document.getElementById('recipe-edit-ingredients-container')
    recipeIngredientsContainer.insertBefore(elementToMoveUp, elementToMoveBelow);
}

  function moveIngredientDown(ingredientValue) {
    const ingredientsHTML = document.getElementsByClassName('ingredient')

    let ingredients = []

    for (let i = 0; i < ingredientsHTML.length; i++) {
      const ingredient = ingredientsHTML[i];
      ingredients.push(ingredient.value)
    }
    
    const arrayIndexToMoveDown = ingredients.indexOf(ingredientValue)
    if(arrayIndexToMoveDown === ingredients.length) return
    
    const CSSindexToMoveDown = (arrayIndexToMoveDown + 1)
    const CSSindexToMoveAbove = (CSSindexToMoveDown + 1)

    const elementToMoveDown = document.querySelector(`#recipe-edit-ingredients-container .recipe-edit-ingredient-container:nth-child(${CSSindexToMoveDown})`)
    const elementToMoveAbove = document.querySelector(`#recipe-edit-ingredients-container .recipe-edit-ingredient-container:nth-child(${CSSindexToMoveAbove})`)
    
    const recipeIngredientsContainer = document.getElementById('recipe-edit-ingredients-container')
    recipeIngredientsContainer.insertBefore(elementToMoveAbove, elementToMoveDown);
  }

  function moveInstructionUp(instructionValue) {
    const instructionsHTML = document.getElementsByClassName('instruction')

    let instructions = []

    for (let i = 0; i < instructionsHTML.length; i++) {
      const instruction = instructionsHTML[i];
      instructions.push(instruction.value)
    }
    
    const arrayIndexToMoveUp = instructions.indexOf(instructionValue)
    if(arrayIndexToMoveUp === 0) return
    
    const CSSindexToMoveUp = (arrayIndexToMoveUp + 1)
    const CSSindexToMoveBelow = (CSSindexToMoveUp - 1)

    const elementToMoveUp = document.querySelector(`#recipe-edit-instructions-container .recipe-edit-instruction-container:nth-child(${CSSindexToMoveUp})`)
    const elementToMoveBelow = document.querySelector(`#recipe-edit-instructions-container .recipe-edit-instruction-container:nth-child(${CSSindexToMoveBelow})`)
    
    const recipeInstructionsContainer = document.getElementById('recipe-edit-instructions-container')
    recipeInstructionsContainer.insertBefore(elementToMoveUp, elementToMoveBelow);
}

  function moveInstructionDown(instructionValue) {
    const instructionsHTML = document.getElementsByClassName('instruction')

    let instructions = []

    for (let i = 0; i < instructionsHTML.length; i++) {
      const instruction = instructionsHTML[i];
      instructions.push(instruction.value)
    }
    
    const arrayIndexToMoveDown = instructions.indexOf(instructionValue)
    if(arrayIndexToMoveDown === instructions.length) return
    
    const CSSindexToMoveDown = (arrayIndexToMoveDown + 1)
    const CSSindexToMoveAbove = (CSSindexToMoveDown + 1)

    const elementToMoveDown = document.querySelector(`#recipe-edit-instructions-container .recipe-edit-instruction-container:nth-child(${CSSindexToMoveDown})`)
    const elementToMoveAbove = document.querySelector(`#recipe-edit-instructions-container .recipe-edit-instruction-container:nth-child(${CSSindexToMoveAbove})`)
    
    const recipeInstructionsContainer = document.getElementById('recipe-edit-instructions-container')
    recipeInstructionsContainer.insertBefore(elementToMoveAbove, elementToMoveDown);
}


  $(document).ready(function() {
    $('.expanding-text-input').on('input', function() {
        this.style.height = 'auto'; // Temporarily shrink the textarea to auto
        this.style.height = (this.scrollHeight) + 'px'; // Set the height to the scrollHeight
    });
});
</script>

<%- include('../partials/footer') %>