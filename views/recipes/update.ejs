<%- include('../partials/header') %>

<div id="update-recipe">
  <div id="update-recipe-container">
    <h1>Update Recipe</h1>
    <form action="/recipes/<%= recipe._id %>/update/?_method=PUT" method="POST" enctype="multipart/form-data">
    
      <div id="update-recipe-header-container">
        
        <div id="update-recipe-name-container" class="update-recipe-header-input-container">
          <div class="update-recipe-title">
            <h3>Title</h3>
          </div>
          <div class="update-recipe-content">
            <textarea name="name" type="text" class="expanding-text-input" rows="1" autocomplete="off"><%= recipe.name %></textarea>
          </div>
        </div>

        <div id="update-recipe-description-container" class="update-recipe-header-input-container">
          <div class="update-recipe-title">
            <h3>Description</h3>
          </div>
          <div class="update-recipe-content">
            <textarea name="description" type="text" class="expanding-text-input" rows="1" autocomplete="off"><%= recipe.description %></textarea>
          </div>
        </div>
      </div>

      <br>
      <br>

      <div id="update-recipe-info-container">
        <div id="update-recipe-category-servings-container" class="update-recipe-info-container">
          <div id="update-recipe-category-container" class="update-recipe-input-container">
            <div class="update-recipe-title">
              <h3>Category</h3>
            </div>
              <div class="update-recipe-content">
                <select name="category" class="input">
                  <option value="<%= recipe.category %>"><%= recipe.category %></option>
                  <option value="Snack">Snack</option>
                  <option value="Starter">Starter</option>
                  <option value="Main Course">Main Course</option>
                  <option value="Dessert">Dessert</option>
                  <option value="Cocktail">Cocktail</option>
                </select>
              </div>
          </div>
        
          <div id="update-recipe-cookTime-container" class="update-recipe-input-container">
            <div class="update-recipe-title">
              <h3>Servings</h3>
            </div>
            <div class="update-recipe-content">
              <input name="servings" type="number"  class="short-input" autocomplete="off" value="<%= recipe.servings %>"></input>
            </div>
          </div>
        </div>

        <div id="update-recipe-timings-container" class="update-recipe-info-container">
          <div id="update-recipe-prepTime-container" class="update-recipe-input-container">
            <div class="update-recipe-title">
              <h3>Prep Time</h3>
            </div>
            <div class="update-recipe-content">
              <input name="prepTime" type="number"  class="short-input" autocomplete="off" value="<%= recipe.prepTime %>"></input>
            </div>
            <p>(mins)</p>
          </div>

          <div id="update-recipe-cookTime-container" class="update-recipe-input-container">
            <div class="update-recipe-title">
              <h3>Cook Time</h3>
            </div>
            <div class="update-recipe-content">
              <input name="cookTime" type="number"  class="short-input" autocomplete="off" value="<%= recipe.cookTime %>"></input>
            </div>
            <p>(mins)</p>
          </div>
        </div>
      </div>


      <div id="update-recipe-ingredients-instructions-container">

        <div id="update-recipe-ingredients-container" class="update-recipe-ingredients-instructions-container">
          <div class="update-recipe-title">
            <h3>Ingredients</h3>
          </div>
            <div id="update-recipe-ingredients">
              <% if(recipe.ingredients.length > 0) { %>
                <% recipe.ingredients.forEach(function(ingredient) { %>
                  <div class="update-recipe-ingredient-container">
                    <ul>
                      <li>
                        <input name="ingredient" type="text" class="ingredient input" value="<%= ingredient %>"></input>
                      </li>
                  </ul>
                    <div class="ingredient-up">
                      <a type="button" class="ingredient-up" onclick="moveIngredientUp('<%= ingredient %>')"><img src="/public/icons/arrow_upward.png"></a>
                    </div>
                    <div class="ingredient-down">
                      <a type="button" class="ingredient-down" onclick="moveIngredientDown('<%= ingredient %>')"><img src="/public/icons/arrow_downward.png"></a>
                    </div>
                    <div class="ingredient-delete">
                      <a type="button" class="ingredient-delete" onclick="deleteIngredient('<%= ingredient %>')"><img src="/public/icons/delete.png"></a>
                    </div>
                  </div>
                <% }) %> 
              <% } else { %>
                <p>Add some ingredients now!</p>
              <% } %> 
            </div>
          <div id="update-recipe-ingredient-add" class="update-recipe-add-buttons">
            <button type="button" class="reg-button" onclick="addIngredientField()">Add Ingredient</button>
          </div>
        </div>


          <div id="update-recipe-instructions-container" class="update-recipe-ingredients-instructions-container">
            <div class="update-recipe-title">
              <h3>Instructions</h3>
            </div>
            <div id="update-recipe-instructions">
            <% if(recipe.instructions.length > 0) { %>
              <% recipe.instructions.forEach(function(instruction) { %>
                <div class="update-recipe-instruction-container">
                  <ul>
                    <li>
                      <input name="instruction" type="text" class="instruction input" value="<%= instruction %>"></input>
                    </li>
                  </ul>
                  <div class="instruction-up">
                    <a type="button" class="instruction-up" onclick="moveInstructionUp('<%= instruction %>')"><img src="/public/icons/arrow_upward.png"></a>
                  </div>
                  <div class="instruction-down">
                    <a type="button" class="instruction-down" onclick="moveInstructionDown('<%= instruction %>')"><img src="/public/icons/arrow_downward.png"></a>
                  </div>
                  <div class="instruction-delete">
                    <a type="button" class="instruction-delete" onclick="deleteInstruction('<%= instruction %>')"><img src="/public/icons/delete.png"></a>
                  </div>
                </div>
              <% }) %> 
            <% } else { %>
                <p>Add some instructions now!</p>
            <% } %> 
          </div>
          <div id="update-recipe-instruction-add" class="update-recipe-add-buttons">
            <button type="button" class="reg-button" onclick="addInstructionField()">Add Instruction</button>
          </div>
        </div>
      </div>


      <div id="update-recipe-footer-container">
        
        <div id="update-recipe-photo-container" class="update-recipe-header-input-container">
          <div class="update-recipe-title">
            <h3>Photo</h3>
          </div>
          <div id="update-recipe-image-content">
            <img id="update-recipe-image" src="<%= recipe.photo %>"></img>
          </div>
          <div id="update-recipe-image-buttons">



            <div id="update-recipe-upload-photo-button-container" class="update-recipe-photo-button-containers">
              <label for="photo-for-upload" class="custom-file-upload">
                <div class="button-container">
                  <span class="reg-button">Choose a File</span>
                  <input id="photo-for-upload" type="file" name="photo" accept="image/*"></input>
                </div>
              </label>
            </div>


            
            <div id="update-recipe-delete-photo-button-container" class="update-recipe-photo-button-containers">
              <button type="button" class="reg-button" onclick="photoDelete()">Delete Photo</button>
            </div>
          </div>
          <p>If you don't upload a photo we'll generate an image using AI!</p>    
              
        </div>
      
        <br>
        <br>
        <br>
      
    
      <button type="submit" class="reg-button">Save Recipe</button>
    </form>
    
    <br>
  </div>
</div>


<script>
  function addIngredientField() {
    const ingredientContainer = document.getElementById('update-recipe-ingredients')

    ingredient = document.createElement('div');
    ingredient.className = 'update-recipe-ingredient-container';

    // Create ul and append to main container
    let ul = document.createElement('ul');
    ingredient.appendChild(ul);

    // Create li, input and append to ul
    let li = document.createElement('li')
    let input = document.createElement('input')
    input.setAttribute('name', 'ingredient')
    input.setAttribute('type', 'text')
    input.setAttribute('autocomplete', 'off')
    input.className = 'ingredient input'
    li.appendChild(input)
    ul.appendChild(li)

    // Create ingredient-up div and append to main container
    let ingredientUp = document.createElement('div')
    ingredientUp.className = 'ingredient-up'
    let aUp = document.createElement('a')
    aUp.setAttribute('type', 'button')
    aUp.className = 'ingredient-up'
    aUp.onclick = function() {
      moveIngredientUp(input.value);
    }
    let imgUp = document.createElement('img')
    imgUp.setAttribute('src', '/public/icons/arrow_upward.png')
    aUp.appendChild(imgUp)
    ingredientUp.appendChild(aUp)
    ingredient.appendChild(ingredientUp)

    // Create ingredient-down div and append to main container
    let ingredientDown = document.createElement('div')
    ingredientDown.className = 'ingredient-down'
    let aDown = document.createElement('a')
    aDown.setAttribute('type', 'button')
    aDown.className = 'ingredient-down'
    aDown.onclick = function() {
      moveIngredientDown(input.value);
    }
    let imgDown = document.createElement('img')
    imgDown.setAttribute('src', '/public/icons/arrow_downward.png')
    aDown.appendChild(imgDown)
    ingredientDown.appendChild(aDown)
    ingredient.appendChild(ingredientDown)

    // Create ingredient-delete div and append to main container
    let ingredientDelete = document.createElement('div')
    ingredientDelete.className = 'ingredient-delete'
    let aDelete = document.createElement('a')
    aDelete.setAttribute('type', 'button')
    aDelete.className = 'ingredient-delete'
    aDelete.onclick = function() {
      deleteIngredient(input.value)
    }
    let imgDelete = document.createElement('img')
    imgDelete.setAttribute('src', '/public/icons/delete.png')
    aDelete.appendChild(imgDelete)
    ingredientDelete.appendChild(aDelete)
    ingredient.appendChild(ingredientDelete)

    // Append the main container to the ingredientContainer
    ingredientContainer.appendChild(ingredient)

  }


  function addInstructionField() {
    const instructionContainer = document.getElementById('update-recipe-instructions')

    instruction = document.createElement('div');
    instruction.className = 'update-recipe-instruction-container';

    // Create ul and append to main container
    let ul = document.createElement('ul');
    instruction.appendChild(ul);

    // Create li, input and append to ul
    let li = document.createElement('li')
    let input = document.createElement('input')
    input.setAttribute('name', 'instruction')
    input.setAttribute('type', 'text')
    input.setAttribute('autocomplete', 'off')
    input.className = 'instruction input'
    li.appendChild(input)
    ul.appendChild(li)

    // Create instruction-up div and append to main container
    let instructionUp = document.createElement('div')
    instructionUp.className = 'instruction-up'
    let aUp = document.createElement('a')
    aUp.setAttribute('type', 'button')
    aUp.className = 'instruction-up'
    aUp.onclick = function() {
      moveInstructionUp(input.value);
    }
    let imgUp = document.createElement('img')
    imgUp.setAttribute('src', '/public/icons/arrow_upward.png')
    aUp.appendChild(imgUp)
    instructionUp.appendChild(aUp)
    instruction.appendChild(instructionUp)

    // Create instruction-down div and append to main container
    let instructionDown = document.createElement('div')
    instructionDown.className = 'instruction-down'
    let aDown = document.createElement('a')
    aDown.setAttribute('type', 'button')
    aDown.className = 'instruction-down'
    aDown.onclick = function() {
      moveInstructionDown(input.value);
    }
    let imgDown = document.createElement('img')
    imgDown.setAttribute('src', '/public/icons/arrow_downward.png')
    aDown.appendChild(imgDown)
    instructionDown.appendChild(aDown)
    instruction.appendChild(instructionDown)

    // Create instruction-delete div and append to main container
    let instructionDelete = document.createElement('div')
    instructionDelete.className = 'instruction-delete'
    let aDelete = document.createElement('a')
    aDelete.setAttribute('type', 'button')
    aDelete.className = 'instruction-delete'
    aDelete.onclick = function() {
      deleteInstruction(input.value)
    }
    let imgDelete = document.createElement('img')
    imgDelete.setAttribute('src', '/public/icons/delete.png')
    aDelete.appendChild(imgDelete)
    instructionDelete.appendChild(aDelete)
    instruction.appendChild(instructionDelete)

    // Finally append the main container to the instructionContainer
    instructionContainer.appendChild(instruction)

  }

  function moveIngredientUp(ingredientValue) {
    const ingredientsHTML = document.getElementsByClassName('ingredient')
    
    let ingredients = []
    
    for (let i = 0; i < ingredientsHTML.length; i++) {
      const ingredient = ingredientsHTML[i];
      ingredients.push(ingredient.value)
    }
    
    const arrayIndexToMoveUp = ingredients.indexOf(ingredientValue)
    if(arrayIndexToMoveUp === 0) return
    
    const CSSindexToMoveUp = (arrayIndexToMoveUp + 1)
    const CSSindexToMoveBelow = (CSSindexToMoveUp - 1)

    const elementToMoveUp = document.querySelector(`#update-recipe-ingredients .update-recipe-ingredient-container:nth-child(${CSSindexToMoveUp})`)
    const elementToMoveBelow = document.querySelector(`#update-recipe-ingredients .update-recipe-ingredient-container:nth-child(${CSSindexToMoveBelow})`)
    
    const recipeIngredientsContainer = document.getElementById('update-recipe-ingredients')
    recipeIngredientsContainer.insertBefore(elementToMoveUp, elementToMoveBelow);
}

  function moveIngredientDown(ingredientValue) {
    const ingredientsHTML = document.getElementsByClassName('ingredient')

    let ingredients = []

    for (let i = 0; i < ingredientsHTML.length; i++) {
      const ingredient = ingredientsHTML[i];
      ingredients.push(ingredient.value)
    }
    
    const arrayIndexToMoveDown = ingredients.indexOf(ingredientValue)
    
    const CSSindexToMoveDown = (arrayIndexToMoveDown + 1)
    const CSSindexToMoveAbove = (CSSindexToMoveDown + 1)
    if(CSSindexToMoveDown === ingredients.length) return

    const elementToMoveDown = document.querySelector(`#update-recipe-ingredients .update-recipe-ingredient-container:nth-child(${CSSindexToMoveDown})`)
    const elementToMoveAbove = document.querySelector(`#update-recipe-ingredients .update-recipe-ingredient-container:nth-child(${CSSindexToMoveAbove})`)
    
    const recipeIngredientsContainer = document.getElementById('update-recipe-ingredients')
    recipeIngredientsContainer.insertBefore(elementToMoveAbove, elementToMoveDown);
  }
  
  function deleteIngredient(ingredientValue) {
    const ingredientsHTML = document.getElementsByClassName('ingredient')

    let ingredients = []

    for (let i = 0; i < ingredientsHTML.length; i++) {
      const ingredient = ingredientsHTML[i];
      ingredients.push(ingredient.value)
    }
    
    const arrayIndexToDelete = ingredients.indexOf(ingredientValue)    
    const CSSindexToDelete = (arrayIndexToDelete + 1)
    console.log("CSSindexToDelete", CSSindexToDelete)
    
    const elementToDelete = document.querySelector(`#update-recipe-ingredients .update-recipe-ingredient-container:nth-child(${CSSindexToDelete})`)
    console.log("elementToDelete", elementToDelete)
    
    const recipeIngredientsContainer = document.getElementById('update-recipe-ingredients')
    recipeIngredientsContainer.removeChild(elementToDelete);
    
  }

  function moveInstructionUp(instructionValue) {
    const instructionsHTML = document.getElementsByClassName('instruction')

    let instructions = []

    for (let i = 0; i < instructionsHTML.length; i++) {
      const instruction = instructionsHTML[i];
      instructions.push(instruction.value)
    }
    
    const arrayIndexToMoveUp = instructions.indexOf(instructionValue)
    if(arrayIndexToMoveUp === 0) return
    
    const CSSindexToMoveUp = (arrayIndexToMoveUp + 1)
    const CSSindexToMoveBelow = (CSSindexToMoveUp - 1)

    const elementToMoveUp = document.querySelector(`#update-recipe-instructions .update-recipe-instruction-container:nth-child(${CSSindexToMoveUp})`)
    const elementToMoveBelow = document.querySelector(`#update-recipe-instructions .update-recipe-instruction-container:nth-child(${CSSindexToMoveBelow})`)
    
    const recipeInstructionsContainer = document.getElementById('update-recipe-instructions')
    recipeInstructionsContainer.insertBefore(elementToMoveUp, elementToMoveBelow);
}

  function moveInstructionDown(instructionValue) {
    const instructionsHTML = document.getElementsByClassName('instruction')

    let instructions = []

    for (let i = 0; i < instructionsHTML.length; i++) {
      const instruction = instructionsHTML[i];
      instructions.push(instruction.value)
    }
    
    const arrayIndexToMoveDown = instructions.indexOf(instructionValue)
    
    const CSSindexToMoveDown = (arrayIndexToMoveDown + 1)
    const CSSindexToMoveAbove = (CSSindexToMoveDown + 1)

    if(CSSindexToMoveDown === instructions.length) return

    const elementToMoveDown = document.querySelector(`#update-recipe-instructions .update-recipe-instruction-container:nth-child(${CSSindexToMoveDown})`)
    const elementToMoveAbove = document.querySelector(`#update-recipe-instructions .update-recipe-instruction-container:nth-child(${CSSindexToMoveAbove})`)
    
    const recipeInstructionsContainer = document.getElementById('update-recipe-instructions')
    recipeInstructionsContainer.insertBefore(elementToMoveAbove, elementToMoveDown);
}

function deleteInstruction(instructionValue) {
    const instructionsHTML = document.getElementsByClassName('instruction')

    let instructions = []

    for (let i = 0; i < instructionsHTML.length; i++) {
      const instruction = instructionsHTML[i];
      instructions.push(instruction.value)
    }
    
    const arrayIndexToDelete = instructions.indexOf(instructionValue)    
    const CSSindexToDelete = (arrayIndexToDelete + 1)
    console.log("CSSindexToDelete", CSSindexToDelete)
    
    const elementToDelete = document.querySelector(`#update-recipe-instructions .update-recipe-instruction-container:nth-child(${CSSindexToDelete})`)
    console.log("elementToDelete", elementToDelete)
    
    const recipeInstructionsContainer = document.getElementById('update-recipe-instructions')
    recipeInstructionsContainer.removeChild(elementToDelete);
    
}

// function photoUpload() {
  
  const photoForUpload = document.getElementById('photo-for-upload')
  
  const previewImageLocation = document.getElementById('update-recipe-image-content')
  
  const previewImage = document.createElement('img')
  
  photoForUpload.addEventListener('change', function(event) {
    const currentPhotoElement = document.getElementById('update-recipe-image')
    const placeholderPhotoElement = document.getElementById('no-image-placeholder')

    if(currentPhotoElement) {
      currentPhotoElement.remove()
    
    } else if(placeholderPhotoElement) {
      placeholderPhotoElement.remove()
    }
    
    
    var file = event.target.files[0]

    if (file) {
      let reader = new FileReader()

      reader.onload = function(e) {
        previewImage.id = 'update-recipe-uploaded-image'
        previewImage.src = e.target.result;
        previewImage.style.display = 'block';
      };

      reader.readAsDataURL(file);
      previewImageLocation.appendChild(previewImage)

    } else {
      previewImage.src = '';
      previewImage.style.display = 'none';
    }

})



// }

function photoDelete() {
  // const currentPhotoElement = document.getElementById('update-recipe-image').remove()
  
  const currentPhotoElement = document.getElementById('update-recipe-image')
  const uploadedPhotoElement = document.getElementById('update-recipe-uploaded-image')

  if(currentPhotoElement) {
    currentPhotoElement.remove()

  } else if(uploadedPhotoElement) {
    uploadedPhotoElement.remove()
  }

  const photoDiv = document.getElementById('update-recipe-image-content')
  
  const noImagePlaceholder = document.createElement('div')
  noImagePlaceholder.id = 'no-image-placeholder'
  noImagePlaceholder.classList.add('update-recipe-image')
  photoDiv.appendChild(noImagePlaceholder)
  
  const noImagePlaceholderDiv = document.getElementById('no-image-placeholder')
  
  const noImagePlaceholderOverlayH3 = document.createElement('h3')
  noImagePlaceholderOverlayH3.id = 'no-image-placeholder-overlay-h3'
  noImagePlaceholderOverlayH3.textContent = "No Photo Selected"
  noImagePlaceholderDiv.appendChild(noImagePlaceholderOverlayH3)

  const noImagePlaceholderOverlayP = document.createElement('p')
  noImagePlaceholderOverlayP.id = 'no-image-placeholder-overlay-p'
  noImagePlaceholderOverlayP.textContent = "We will generate something beautiful using the magic of AI!"
  noImagePlaceholderDiv.appendChild(noImagePlaceholderOverlayP)



}



  $(document).ready(function() {
    $('.expanding-text-input').on('input', function() {
        this.style.height = 'auto'
        this.style.height = (this.scrollHeight) + 'px';
    })
})
</script>

<%- include('../partials/footer') %>